FROM node:14-alpine AS builder

# Add a work directory
WORKDIR /app

ENV PATH /app/node_modules/.bin:$PATH

COPY ./package*.json ./
# COPY yarn.lock .

RUN npm ci --silent

RUN npm install react-scripts@3.4.1 -g --silent

# Copy the rest of the application code
COPY . .

RUN npm install
# Build the app
RUN npm run build

# Bundle static assets with nginx
FROM nginx:1.21.0-alpine as production

# Copy built assets from builder
COPY --from=builder /app/build /usr/share/nginx/html

# Add your nginx.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80 

# Start nginx
CMD ["nginx", "-g", "daemon off;"]



# This dockerfile will install all node dependencies, then build your react app (create build directory), Then our nginx setup will serve our app from this build directory.
# we might not need docker-compose.prod.yml for production build, as your hosting provider will handle that, but Dockerfile and nginx.conf will require.