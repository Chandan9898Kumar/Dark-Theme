
# Use an official Node.js runtime as a base image
FROM node:14-alpine AS development

ENV NODE_ENV development

# Set the working directory inside the container
WORKDIR /app


# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Cache and Install dependencies
COPY yarn.lock .

#RUN yarn install
RUN npm install

## Copy the local project files to the working directory.
COPY . .

# Expose the port the app runs on
EXPOSE 3000

# Start the app
CMD [ "yarn", "start" ]




# Create a docker-compose.dev.yml. Additionally, we will mount our code in a volume so that our code changes are in sync with the container during development.